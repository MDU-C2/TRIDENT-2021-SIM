<?xml version="1.0"?>
<launch>

	<arg name="gui" default="false"/>
    <arg name="parse" default="false"/>  
 	<arg name="namespace" default="diffboat"/>  
    <arg name="posX" default="0"/>
    <arg name="posY" default="0"/>
    <arg name="posZ" default="0"/>
    <arg name="spawnGazebo" default="false"/>
    <arg name="windType" default="global"/>
    <arg name="waterType" default="global"/>
    
	<!-- spawn in Gazebo with GUI -->
	<group ns="$(arg namespace)" unless="$(arg parse)">
		<param name="robot_description" command="$(find xacro)/xacro $(find usv_sim)/xacro/diffboat.xacro waterType:=$(arg waterType) windType:=$(arg windType)"/>
		<node unless="$(arg spawnGazebo)" name="spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model diffboat -param robot_description -x $(arg posX) -y $(arg posY) -z $(arg posZ) -R 0 -P 0 -Y 0"/>

		<!-- Load controller configurations (vehicle and arm) from YAML file to parameter server -->
		<rosparam file="$(find usv_sim)/config/diffboat.yaml" command="load"/>

		<!-- Launch control -->
		<node name="pid_control" pkg="freefloating_gazebo" type="pid_control" output="screen" respawn="true"/>
		<!--<node name="control_vel" pkg="usv_base_ctrl" type="boat_diff_vel_ctrl.py"  unless="$(arg gui)"/>-->
         <node name="heading_control" pkg="usv_base_ctrl" type="diff_control_heading.py" unless="$(arg gui)" output="screen" />
		<node name="odom_base_tf" pkg="usv_tf" type="world_tf_broadcaster.py"/> 
		<node pkg="tf" type="static_transform_publisher" name="laser_base_tf" args="0.5 0 0.2 0 0 0 1 base_link diffboat/base_laser 10" />

		<node name="odom_relay" type="relay" pkg="topic_tools" args="state /odom" />
		<node name="vel_relay" type="relay" pkg="topic_tools" args="/navigation_velocity_smoother/raw_cmd_vel cmd_vel" />


		<!-- GUI interface to control joints -->
			<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" if="$(arg gui)"/>             
		<!-- GUI interface to control thrusters -->
			<group ns="thrusters">
			     <param name="robot_description" command="$(find xacro)/xacro --inorder $(find usv_sim)/urdf/diffboat_dummy.urdf"/>                         
			     <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" respawn="true" if="$(arg gui)">
			     <param name="use_gui" value="True"/>
			     <remap from="joint_states" to="/$(arg namespace)/thruster_command" />
			     </node>             
			</group>

	</group>
</launch>
